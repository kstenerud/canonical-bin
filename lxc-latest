#!/bin/bash

set -eu

show_help()
{
	echo "Usage: $(basename $0) [options] <image>

Options:
	-n <name>: Specify the name of the container to create (default same as image name)
    -r <remote>: Specify which remote to use (default ubuntu-daily)
    -u: Don't dist-upgrade
    -d: Add debug symbol repositories"
}

usage()
{
	show_help
	exit 1
}

lxc_is_network_up()
{
	container=$1
    lxc exec $container -- grep $'\t0003\t' /proc/net/route >/dev/null
}

lxc_wait_for_network()
{
	container=$1
    until lxc_is_network_up $container;
    do
        echo "Waiting for network"
        sleep 1
    done
}

CONTAINER_NAME=
REMOTE=ubuntu-daily
DIST_UPGRADE=1
DEBUG_SYMBOLS=0

while getopts "?n:r:ud" o; do
    case "$o" in
        \?)
            show_help
            exit 0
            ;;
        n)
            CONTAINER_NAME=$OPTARG
            ;;
        r)
            REMOTE=$OPTARG
            ;;
        u)
            DIST_UPGRADE=0
            ;;
        d)
            DEBUG_SYMBOLS=1
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ $# -ne 1 ]; then
	usage
fi

IMAGE=$1
if [ -z "$CONTAINER_NAME" ]; then
    CONTAINER_NAME=$IMAGE
fi

echo "Deleting old $CONTAINER_NAME"
lxc delete -f $CONTAINER_NAME || true
echo "lxc launch $REMOTE:$IMAGE $CONTAINER_NAME"
lxc launch $REMOTE:$IMAGE $CONTAINER_NAME
# TODO: Make this a command line switch
# echo "Acquire::http { Proxy \"http://apt-cache:3142\"; }" | lxc exec $CONTAINER_NAME -- sudo tee /etc/apt/apt.conf.d/00-apt-proxy
lxc_wait_for_network $CONTAINER_NAME
if [ $DEBUG_SYMBOLS -eq 1 ]; then
    release=$(lxc exec $CONTAINER_NAME -- lsb_release -cs)
    version=$(lxc exec $CONTAINER_NAME -- lsb_release -rs)
    echo "deb http://ddebs.ubuntu.com $release main restricted universe multiverse
    deb http://ddebs.ubuntu.com $release-updates main restricted universe multiverse
    deb http://ddebs.ubuntu.com $release-proposed main restricted universe multiverse" | \
    lxc exec $CONTAINER_NAME -- tee -a /etc/apt/sources.list.d/ddebs.list

    # if (( $(echo "$version >= 18.04" |bc -l) )); then
    #     lxc exec $CONTAINER_NAME -- apt install -y ubuntu-dbgsym-keyring
    # else
        lxc exec $CONTAINER_NAME -- apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F2EDC64DC5AEE1F6B9C621F0C8CAB6595FDFF622
    # fi
fi
echo "apt update"
lxc exec $CONTAINER_NAME -- apt update
if [ $DIST_UPGRADE -eq 1 ]; then
    if [ "$IMAGE" == "disco" ]; then
        # Workaround for snapd.failure.service is a disabled or a static unit, not starting it
        lxc exec $CONTAINER_NAME -- apt purge -y snapd
    fi
    echo "apt dist-upgrade -y"
    lxc exec $CONTAINER_NAME -- apt dist-upgrade -y
    if [ "$IMAGE" == "disco" ]; then
        # Workaround for snapd.failure.service is a disabled or a static unit, not starting it
        lxc exec $CONTAINER_NAME -- apt install -y snapd
    fi
fi
lxc exec $CONTAINER_NAME -- apt autoremove -y
lxc exec $CONTAINER_NAME bash
